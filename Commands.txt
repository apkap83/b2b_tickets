# Run development Environment on port 3500
nx dev b2b_tickets -p 3500

# Creating ui library under libs folder
nx g lib --directory libs --appProject b2b_tickets --tags type:ui,scope:b2b_tickets

# Create config library under libs folder
nx g @nrwl/js:lib config

# Create NavBar component
nx g component NavBar --project ui --export --tags type:ui,scope=b2b_tickets

# Create Footer component
nx g component Footer --project ui --export --tags type:ui,scope=b2b_tickets

# Creating ui-theme library under libs folder
nx g lib --directory libs --tags type:ui,scope:b2b_tickets

# Creating Server Actions library
 nx g @nx/next:library server-actions --directory libs --tags type:server,scope:b2b_tickets

# Creating Assets library (e.g. Nova Logo)
nx g @nx/next:library assets --directory libs --tags type:ui,scope:b2b_tickets

# Creating Utils library
 nx g lib utils --directory libs --tags type:utils,scope:b2b_tickets

# Create React Hooks Library
 nx g @nx/react:library react_hooks --directory libs --tags type:utils,scope:b2b_tickets

 # Create Shared Typescript Models Library
 nx g lib shared-models --directory libs --tags type:utils,scope:shared

 # Create SubmitButton component
nx g component SubmitButton --project ui --export --tags type:ui,scope=b2b_tickets

# Create Admin Dashboard Component under tickets/ui library
nx generate @nx/next:library admin-dashboard --directory=tickets/ui --component

# Create logging library under libs folder
nx g @nrwl/js:lib logging

# Creating Server Actions library
 nx g @nx/next:library admin-server-actions --directory libs --tags type:server,scope:b2b_tickets

# Creating Auth-Options library
 nx g @nx/next:library auth-options --directory libs --tags type:server,scope:b2b_tickets

 # Create Pagination component
nx g component Pagination --project ui --export --tags type:ui,scope=b2b_tickets

 # Logged In Indication component
nx g component LoggedInIndication --project ui --export --tags type:ui,scope=b2b_tickets

# Create Session Popup component
nx g component Pagination --project ui --export --tags type:ui,scope=b2b_tickets

# Sequelize-Auto - Create Models Automatically
    # Generate users model
    npx sequelize-auto -o "./models" -d postgres -h 127.0.0.1 -p 9002 -u postgres -x postgres -s 'b2btickets_dev' --dialect postgres -l tsnpx sequelize-auto -o "./models" -d postgres -h 127.0.0.1 -p 9002 -u postgres -x postgres -s 'b2btickets_dev' --dialect postgres -l ts

    # Generate Whole DB Models
    npx sequelize-auto -o "./models" -d postgres -h 127.0.0.1 -p 9002 -u postgres -x postgres -s 'b2btickets_dev' --dialect postgres -l ts

# Create Comments Component under tickets/ui library
nx generate @nx/next:library comments --directory=tickets/ui --component

# Create E-mail service Library
nx g lib email-service --directory libs --tags type:utils,scope:shared

# Create TOTP service Library
nx g lib totp-service --directory libs --tags type:utils,scope:shared




# Add Jest to a project
nx g @nx/jest:configuration --project=tickets

# Test E2E 
cd apps/b2b_tickets-e2e; 
npx playwright test --project chromium

# OR using nx
nx run b2b_tickets-e2e:e2e  