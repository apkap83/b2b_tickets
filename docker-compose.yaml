services:
  staging_b2b_tickets_pre_entry_1:
    build:
      context: .
      dockerfile: apps/b2b_tickets/Dockerfile
    image: b2b_tickets_img_preentry:1.4.0
    ports:
      - '${B2B_TICKETS_PORT_1:-5001}:3000'
    container_name: Staging_B2B_Tickets_PreEntry_1
    dns:
      - ${DNS_SERVER:-1.1.1.1}
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
      - 'redis_host:${REDIS_HOST_IP}'
    environment:
      - NODE_ENV=production
      - APP_ENV=staging
      - PORT=3000
      #   Example for Proxy Usage
      # - http_proxy=http://10.9.112.70:8000
      # - https_proxy=http://10.9.112.70:8000
      # - no_proxy=localhost,127.0.0.1,emailrelay,10.0.1.19,sms-gw1,10.131.12.77,sms-gw2,10.131.20.78,test-sms-gw1,10.131.28.73,b2b_database,172.27.52.177
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: >
      sh -c "cp /app/env-files/.env.staging /app/apps/b2b_tickets/.env.production &&
             cp /app/env-files/staging.ts /app/libs/config/src/lib/production.ts &&
             nx start b2b_tickets --verbose"
    volumes:
      - /var/log/b2b_test:/app/apps/b2b_tickets/logs/development
      - /home/centos/Staging_Environment_Variables/.env.staging:/app/env-files/.env.staging
      - /home/centos/Staging_Configuration/staging.ts:/app/env-files/staging.ts
      - /home/centos/applications/b2b_tickets/attachment_files_test:/home/centos/applications/b2b_tickets/attachment_files_test
    restart: unless-stopped

  staging_b2b_tickets_pre_entry_2:
    build:
      context: .
      dockerfile: apps/b2b_tickets/Dockerfile
    image: b2b_tickets_img_preentry:1.4.0
    ports:
      - '${B2B_TICKETS_PORT_2:-5002}:3000'
    container_name: Staging_B2B_Tickets_PreEntry_2
    dns:
      - ${DNS_SERVER:-1.1.1.1}
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
      - 'redis_host:${REDIS_HOST_IP}'
    environment:
      - NODE_ENV=production
      - APP_ENV=staging
      - PORT=3000
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: >
      sh -c "cp /app/env-files/.env.staging /app/apps/b2b_tickets/.env.production &&
             cp /app/env-files/staging.ts /app/libs/config/src/lib/production.ts &&
             nx start b2b_tickets --verbose"
    volumes:
      - /var/log/b2b_test:/app/apps/b2b_tickets/logs/development
      - /home/centos/Staging_Environment_Variables/.env.staging:/app/env-files/.env.staging
      - /home/centos/Staging_Configuration/staging.ts:/app/env-files/staging.ts
      - /home/centos/applications/b2b_tickets/attachment_files_test:/home/centos/applications/b2b_tickets/attachment_files_test
    restart: unless-stopped

  prod_b2b_tickets_1:
    build:
      context: .
      dockerfile: apps/b2b_tickets/Dockerfile
    image: b2b_tickets_img_production:1.4.0
    ports:
      - '${PROD_B2B_PORT_1:-8001}:3000'
    container_name: Prod_B2B_Tickets_1
    dns:
      - ${DNS_SERVER:-1.1.1.1}
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
      - 'redis_host:${REDIS_HOST_IP}'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: ['nx', 'start', 'b2b_tickets', '--verbose']
    volumes:
      - /var/log/b2b_prod:/app/apps/b2b_tickets/logs/production
      - /home/centos/applications/b2b_tickets/attachment_files_prod:/home/centos/applications/b2b_tickets/attachment_files_prod
    restart: unless-stopped

  prod_b2b_tickets_2:
    build:
      context: .
      dockerfile: apps/b2b_tickets/Dockerfile
    image: b2b_tickets_img_production:1.4.0
    ports:
      - '${PROD_B2B_PORT_2:-8002}:3000'
    container_name: Prod_B2B_Tickets_2
    dns:
      - ${DNS_SERVER:-1.1.1.1}
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
      - 'redis_host:${REDIS_HOST_IP}'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: ['nx', 'start', 'b2b_tickets', '--verbose']
    volumes:
      - /var/log/b2b_prod:/app/apps/b2b_tickets/logs/production
      - /home/centos/applications/b2b_tickets/attachment_files_prod:/home/centos/applications/b2b_tickets/attachment_files_prod
    restart: unless-stopped

  staging_socket_server_pre_entry_1:
    build:
      context: .
      dockerfile: apps/socket-server/Dockerfile
    image: staging_socket_server_img_preentry:1.4.0
    ports:
      - '${SOCKET_SERVER_PORT:-3456}:3456'
    container_name: Staging_Socket_Server_PreEntry_1
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
    environment:
      - NODE_ENV=staging
      - DEBUG=1
      - PORT=3456
      - SOCKET_CORS_ORIGIN=${SOCKET_CORS_ORIGIN_STAGING}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - NEXT_AUTH_SESSION_URL=${NEXT_AUTH_SESSION_URL_STAGING}
    command: >
      sh -c "nx build socket-server --configuration=staging --verbose &&
             node dist/apps/socket-server/main.js"
    restart: unless-stopped

  production_socket_server_1:
    build:
      context: .
      dockerfile: apps/socket-server/Dockerfile
    image: production_socket_server_img:1.4.0
    ports:
      - '${PROD_SOCKET_SERVER_PORT:-3457}:3457'
    container_name: Production_Socket_Server_1
    extra_hosts:
      - 'emailrelay:${EMAIL_RELAY_IP}'
      - 'sms-gw1:${SMS_GW1_IP}'
      - 'sms-gw2:${SMS_GW2_IP}'
      - 'test-sms-gw1:${TEST_SMS_GW1_IP}'
      - 'b2b_database:${B2B_DATABASE_IP}'
    environment:
      - NODE_ENV=production
      - DEBUG=1
      - PORT=3457
      - SOCKET_CORS_ORIGIN=${SOCKET_CORS_ORIGIN_PROD}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - NEXT_AUTH_SESSION_URL=${NEXT_AUTH_SESSION_URL_PROD}
    command: >
      sh -c "nx build socket-server --configuration=staging --verbose &&
             node dist/apps/socket-server/main.js"
    restart: unless-stopped
